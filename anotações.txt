Requisição http

URL: https://pokeapi.co/api/v2/pokemon/
   ${endereço} /${path = caminho de identificação do recurso}

Request Method: GET | POST | PUT | DELETE
   GET -> Pega dados da URL
   POST -> Envia dados para o banco de dados
   PUT -> Atualiza os dados do banco de dados
   DELETE -> Deleta dados do banco de dados

Query string:
   Chave = valor
   URL: https://pokeapi.co/api/v2/pokemon/?type=grass&name=Planta
   offset = 20
   limit = 20

Os headers são uma espécie de configuração de uma Requisição

Request headers -> configuração do que se pede
   content-type: application/json 

Response headers -> configuração do que se recebe como resposta

Request body:
{
   "name":"teste"
}

status code: 200 ok

processamento assincrono -> quando ocorre o precessamento mas não gera um resultado na mesma hora.




/*
// A Função fetch() é responsável por fazer a Requisição dos dados externos( API )
fetch(url)
   // A Função then() é executada quando a requisição for bem sucedida!
   .then(function (response) {
      // Mostra o que veio como resposta da requisição
      console.log(response);
   })
   // A Função catch() é executada quando a requisição for mal sucedida!
   .catch(function (error) {
      // Mostra a mensagem de erro da requisição
      console.error(error)
   })
   // A Função finally() é executada quando termina de ser feita a Requisição independente se deu certo ou não.
   .finally(function () {
      console.log('Requisição concluida')
   })

   // Arrow Function - Usada quando só tem 1 linha de retorno, dando possibilidade de redução de código.
   // (parametro) => escopo
   (response) => console.log('mensagem')
*/

// Indica a partir de qual ordem vai chamar os elementos
const offset = 0;

// Limita a quantidade de dados por página
const limit = 5;

// URL de onde estará puxando as informações
const url = `https://pokeapi.co/api/v2/pokemon/?offset=${offset}&limit=${limit}`;

fetch(url)
   // criação de funções com Arrow Function
   .then((response) => response.json())
   .then((jsonBody) => console.log(jsonBody))
   .catch((error) => console.error(error))